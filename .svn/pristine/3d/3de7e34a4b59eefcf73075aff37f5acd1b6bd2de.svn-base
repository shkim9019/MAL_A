package com.mal_a.comments;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.google.gson.Gson;
import com.mal_a.board.BoardVO;
import com.mal_a.cmn.ContHandler;
import com.mal_a.cmn.MessageVO;
import com.mal_a.cmn.SearchVO;
import com.mal_a.cmn.StringUtil;
import com.mal_a.comments.CommentsService;
import com.mal_a.member.MemberVO;
import com.mal_a.code.CodeService;
import com.mal_a.code.CodeVO;

/**
 * Servlet implementation class BoardCont
 * /DaoWEB/board/board.do -> /board/board.do
 */
@WebServlet(description = "게시판", urlPatterns = { "/roxandrea/comments.do" })
public class CommentsCont extends HttpServlet implements ContHandler {
	private static final long serialVersionUID = 1L;//클래스 UID값을 고정시켜주는역할
	/** BoardService객체 */
    private static CommentsService  service;
    /**CodeService 객체*/
    CodeService cdService;
	
    /**
     * @see HttpServlet#HttpServlet()
     */
    public CommentsCont() {
        super();
        service = new CommentsService();
        cdService = new CodeService();
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		//response.getWriter().append("Served at: ").append(request.getContextPath());
		LOG.debug("doGet------");
		serviceHandler(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		LOG.debug("1. doPost------");
		serviceHandler(request, response);
	}

	//거래분기
	@Override
	public void serviceHandler(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		//1.work_div: 작업구분
		//2.request Encoding: utf-8
		//3.기능별 분해
		    //거래분기:
	    	//do_update:수정
	    	//do_delete:삭제
	    	//do_insert:등록
	    	//do_retrieve:목록조회
	    	//do_selectOne:단건조회		
		
		req.setCharacterEncoding("utf-8");//request의 인코딩: utf-8
		String workDiv = StringUtil.nvl(req.getParameter("workDiv"));//null -> ""
		LOG.debug("2====================");
		LOG.debug("2=workDiv="+workDiv);
		LOG.debug("2====================");	
		switch(workDiv) {//거래분기
		
			case "doUpdate"://수정
				LOG.debug("doUpdate!!!!");
				this.doUpdate(req, res);
				break;
		
		    case "doDelete":
		    	this.doDel(req, res);
		    	break;
			case "doSelectOne"://단건조회,단건조회 화면으로 이동
				this.doSelectOne(req, res);
				break;
			case "doInsert"://단건 등록
				this.doInsert(req, res);
				break;
			case "doRetrieve"://목록조회
				LOG.debug("workDiv**********************="+workDiv);
				this.doRetrieve(req, res);
				break;
			case "doViewsUpdate"://목록조회
				LOG.debug("workDiv**********************="+workDiv);
				this.doViewsUpdate(req, res);
				break;
			default:
				  LOG.debug("====================");
				  LOG.debug("=작업구분을 확인 하세요.workDiv="+workDiv);
				  LOG.debug("====================");
				break;
		
		}
	}
	

	//댓글다건조회
	@Override
	public void doRetrieve(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		//1.param
		//2.param set VO
		//3.service호출
		//4.특정화면+data
		SearchVO inVO=new SearchVO();//검색구분,검색어
		BoardVO inVO1=new BoardVO();
		
		String searchDiv  = StringUtil.nvl(req.getParameter("searchDiv"));//StringUtil->파라미터 값으로 null을 주더라도 절대 NullPointException을 발생시키지 않음.
		//String searchDiv  = req.getParameter("search_div");
		String searchWord = StringUtil.nvl(req.getParameter("searchWord"));
		String pageSize   = StringUtil.nvl(req.getParameter("pageSize"),"10");//10은 nvl처리로인한 디폴트값
		String pageNum    = StringUtil.nvl(req.getParameter("pageNum"),"1");
		String seq1 = StringUtil.nvl(req.getParameter("seq"));
		
	    String regId = StringUtil.nvl(req.getParameter("regId"));
	    String check1 = "0";
		
	    HttpSession httpSession = req.getSession();
	    MemberVO memvo = (MemberVO) httpSession.getAttribute("user"); // 세션값 loginID 의 doselectOne
	    String SesId = memvo.getMid(); //selectOne 값에서  Mid를 추출
		
		
		LOG.debug("=======================");
		LOG.debug("=searchDiv="+searchDiv);
		LOG.debug("=searchWord="+searchWord);
		LOG.debug("=======================");
		
		inVO.setSearchDiv(searchDiv);
		inVO.setSearchWord(searchWord);
		inVO.setPageNum(Integer.parseInt(pageNum));
		inVO.setPageSize(Integer.parseInt(pageSize));
		inVO1.setBno(seq1);
		
		LOG.debug("=======================");
		LOG.debug("=inVO="+inVO);
		LOG.debug("=======================");
		
		//----------------------------------------------
		//Code조회
		// BOARD_SEARCH_DIV(검색조건)
		//COM_PAGE_SIZE(페이지 사이즈)
		//----------------------------------------------
	    CodeVO searchDIV = new CodeVO();
  	    searchDIV.setMstId("boardSearchDiv");
  	    
	    List<CodeVO> searchList = (List<CodeVO>) this.cdService.doRetrieve(searchDIV);
	      
	    searchDIV.setMstId("comPageSize");
        List<CodeVO> pageSizeList = (List<CodeVO>) this.cdService.doRetrieve(searchDIV);
		
		List<CommentsVO> list = (List<CommentsVO>) this.service.doRetrieveList(inVO);
		
		LOG.debug("---------------------");
		for(CommentsVO vo :list) {
			LOG.debug(vo);
		}
		
		LOG.debug("---------------------");
		//http://localhost:8080/DaoWEB/board/board.do?search_div=10&search_word=&page_size=10&page_num=1&work_div=do_retrieve
		//총글수
		int totalCnt =0;
		if(null !=list && list.size()>0) {
			CommentsVO totalVO=list.get(0);//0번째열의갯수.그래서뭐넣든노상관 
			totalCnt = totalVO.getTotal();
		}
		//code
		req.setAttribute("searchList",searchList);//search Code
		req.setAttribute("pageSizeList",pageSizeList);//pageSizeList
		
		
		req.setAttribute("list", list);//목록
		req.setAttribute("paramVO", inVO);//param
		req.setAttribute("totalCnt", totalCnt);//총글수
		if(SesId.equals(regId)) {
	    	  check1 ="1";
	      }else {
	    	  check1="0";
	      }
	      req.setAttribute("check1", check1);
		
		RequestDispatcher  dispatcher= req.getRequestDispatcher("/roxandrea/board_select_one.jsp");//총글수
		dispatcher.forward(req, res);
		
	}
	
	//댓글 단건조회
	@Override
	public void doSelectOne(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		
		SearchVO inVO=new SearchVO();//검색구분,검색어
		
		String searchDiv  = StringUtil.nvl(req.getParameter("searchDiv"));//StringUtil->파라미터 값으로 null을 주더라도 절대 NullPointException을 발생시키지 않음.
		//String searchDiv  = req.getParameter("search_div");
		String searchWord = StringUtil.nvl(req.getParameter("searchWord"));
		String pageSize   = StringUtil.nvl(req.getParameter("pageSize"),"10");//10은 nvl처리로인한 디폴트값
		String pageNum    = StringUtil.nvl(req.getParameter("pageNum"),"1");
		
		LOG.debug("=======================");
		LOG.debug("=searchDiv="+searchDiv);
		LOG.debug("=searchWord="+searchWord);
		LOG.debug("=======================");
		
		inVO.setSearchDiv(searchDiv);
		inVO.setSearchWord(searchWord);
		inVO.setPageNum(Integer.parseInt(pageNum));
		inVO.setPageSize(Integer.parseInt(pageSize));
		
		LOG.debug("=======================");
		LOG.debug("=inVO="+inVO);
		LOG.debug("=======================");
		
		//----------------------------------------------
		//Code조회
		// BOARD_SEARCH_DIV(검색조건)
		//COM_PAGE_SIZE(페이지 사이즈)
		//----------------------------------------------
	    CodeVO searchDIV = new CodeVO();
  	    searchDIV.setMstId("boardSearchDiv");
	    List<CodeVO> searchList = (List<CodeVO>) this.cdService.doRetrieve(searchDIV);
	      
	    searchDIV.setMstId("comPageSize");
        List<CodeVO> pageSizeList = (List<CodeVO>) this.cdService.doRetrieve(searchDIV);
		
		List<CommentsVO> list = (List<CommentsVO>) this.service.doRetrieveList(inVO);
		
		LOG.debug("---------------------");
		for(CommentsVO vo :list) {
			LOG.debug(vo);
		}
		
		LOG.debug("---------------------");
		//http://localhost:8080/DaoWEB/board/board.do?search_div=10&search_word=&page_size=10&page_num=1&work_div=do_retrieve
		//총글수
		int totalCnt =0;
		if(null !=list && list.size()>0) {
			CommentsVO totalVO=list.get(0);//0번째열의갯수.그래서뭐넣든노상관 
			totalCnt = totalVO.getTotal();
		}
		//code
		req.setAttribute("searchList",searchList);//search Code
		req.setAttribute("pageSizeList",pageSizeList);//pageSizeList
		
		
		req.setAttribute("list", list);//목록
		req.setAttribute("paramVO", inVO);//param
		req.setAttribute("totalCnt", totalCnt);//총글수
		
		
		RequestDispatcher  dispatcher= req.getRequestDispatcher("/roxandrea/comments_list.jsp");//총글수
		dispatcher.forward(req, res);
		
	}
	
	//댓글등록
	@Override
	public void doInsert(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		  LOG.debug("3====================");
		  LOG.debug("3=doInsert=");
		  LOG.debug("3====================");
		  
		  CommentsVO  inVO=new CommentsVO();//param
		  //1.param read
		  //2.param BoardVO
		  //3.service 메소드 호출
		  //작성자/수정자
		  String regId = StringUtil.nvl(req.getParameter("regId1"),"");
		  
		  //작성일
		  String regDt = StringUtil.nvl(req.getParameter("regDt1"),"");
		  
		  //내용
		  String contents = StringUtil.nvl(req.getParameter("contents1"),"");
		  
		  String bno = StringUtil.nvl(req.getParameter("seq1"),"");
		  
		//login처리후 session으로 변환 할것
		  inVO.setRegId(regId);
		  inVO.setRegDt(regDt);
		  inVO.setCont(contents);
		  inVO.setBno(bno);
		  
		  int flag = this.service.doInsert(inVO);
		  LOG.debug("3====================");
		  LOG.debug("3=flag="+flag);
		  LOG.debug("3====================");
		  
		  //응답처리
		  res.setContentType("text/html;charset=utf-8");
		  PrintWriter out=res.getWriter();//자바에서 웹으로 데이터출력하기위해서 printwriter씀.
//		  if(flag==1) {
//			  out.println("<script>alert('등록성공!');location.href='/DaoWEB/board/board_list.jsp'</script>");
//		  }else {
//			  out.println("<script>alert('실패!');history.go(-1);</script>");
//		  }

		  String msg = "";
		  Gson  gson = new Gson(); 
		  if(1==flag) {
			  msg = "n등록 되었습니다.";
		  }else {
			  msg = "등록 실패.";
		  }
		  
		  String gsonStr =  gson.toJson(new MessageVO(String.valueOf(flag), msg));//valueof는 객체생성과비슷하지만 조금의차이가있음.
		  LOG.debug("====================");
		  LOG.debug("=gsonStr="+gsonStr);
		  LOG.debug("====================");
		  out.println(gsonStr);
		  
	}

	
	
	
	//댓글수정
	@Override
	public void doUpdate(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		  LOG.debug("3====================");
		  LOG.debug("3=doUpdate=");
		  LOG.debug("3====================");
		  
		  CommentsVO inVO=new CommentsVO();//param
		  //1.param read
		  //2.param BoardVO
		  //3.service 메소드 호출
		  
     	  //SEQ
		  String seq = StringUtil.nvl(req.getParameter("cno1"),"");
		  
		  //작성자/수정자
		  String regId = StringUtil.nvl(req.getParameter("regId1"),"");
		  
		  //작성일
//		  String regDt = StringUtil.nvl(req.getParameter("regDt"),"");
		  
		  
		  //내용
		  String contents = StringUtil.nvl(req.getParameter("contents1"),"");
		  
		  //login처리후 session으로 변환 할것
		  inVO.setCno(seq);
		  inVO.setRegId(regId);
//		  inVO.setRegDt(regDt);
		  inVO.setCont(contents);
		  
		  int flag = this.service.doUpdate(inVO);
		  LOG.debug("3====================");
		  LOG.debug("3=flag="+flag);
		  LOG.debug("3====================");
		  
		  //응답처리
		  res.setContentType("text/html;charset=utf-8");
		  PrintWriter out=res.getWriter();
//		  if(flag==1) {
//			  out.println("<script>alert('등록성공!');location.href='/DaoWEB/board/board_list.jsp'</script>");
//		  }else {
//			  out.println("<script>alert('실패!');history.go(-1);</script>");
//		  }

		  String msg = "";
		  Gson  gson = new Gson(); 
		  if(1==flag) {
			  msg = "수정 되었습니다.";
		  }else {
			  msg = "수정 실패.";
		  }
		  
		  String gsonStr =  gson.toJson(new MessageVO(String.valueOf(flag), msg));//int를String으로형변환한 flag인 메세지객체를 Json으로 변환. 
		  LOG.debug("====================");
		  LOG.debug("=gsonStr="+gsonStr);
		  LOG.debug("====================");
		  out.println(gsonStr);
		
	}
	
	
	   //댓글 뷰수정
	   public void doViewsUpdate(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
	       LOG.debug("3====================");
	       LOG.debug("3=doViewsUpdate=");
	       LOG.debug("3====================");
	       
	       CommentsVO inVO=new CommentsVO();//param
	       //1.param read
	       //2.param BoardVO
	       //3.service 메소드 호출
	       
	       //댓글번호
	       String cno = StringUtil.nvl(req.getParameter("cno"),"");
	       //수정자아이디
	       String modId = StringUtil.nvl(req.getParameter("modId"),"");
	       //정지여부
	       String views = StringUtil.nvl(req.getParameter("views"),"");
	       
	       //login처리후 session으로 변환 할것
	       inVO.setCno(cno);
	       inVO.setModId(modId);
	       inVO.setViews(views);
	       
	       int flag = this.service.doViewsUpdate(inVO);
	       LOG.debug("3====================");
	       LOG.debug("3=flag="+flag);
	       LOG.debug("3====================");
	       
	       //응답처리
	       res.setContentType("text/html;charset=utf-8");
	       PrintWriter out=res.getWriter();
//	       if(flag==1) {
//	          out.println("<script>alert('등록성공!');location.href='/DaoWEB/board/board_list.jsp'</script>");
//	       }else {
//	          out.println("<script>alert('실패!');history.go(-1);</script>");
//	       }

	       String msg = "";
	       Gson  gson = new Gson(); 
	       if(1==flag) {
	          msg = inVO.getCno()+"번 댓글이\n수정 되었습니다.";
	       }else {
	          msg = inVO.getCno()+"이\n수정 실패.";
	       }
	       
	       String gsonStr =  gson.toJson(new MessageVO(String.valueOf(flag), msg));//int를String으로형변환한 flag인 메세지객체를 Json으로 변환. 
	       LOG.debug("====================");
	       LOG.debug("=gsonStr="+gsonStr);
	       LOG.debug("====================");
	       out.println(gsonStr);
	     
	  }
	
	
	//댓글 삭제
	@Override
	public void doDel(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		LOG.debug("===================");
		LOG.debug("=doDel=");
		LOG.debug("===================");
		
		//1.vo 변수 선언
		//2.param read
		//3.vo에 param set
		//4.service호출
		//5.Gson message
		//6.forward
		
		CommentsVO inVO =new CommentsVO();
		String cno = StringUtil.nvl(req.getParameter("cno"));
		LOG.debug("cno=="+cno);
		inVO.setCno(cno);
		
		int flag = this.service.doDelete(inVO);
		
		Gson gson =new Gson();
		String msg ="";
		String gsonString ="";
		MessageVO msgVO=new MessageVO();
		
		if(flag>0) {
			msg = "삭제되었습니다.";
		}else {
			msg = "삭제실패.";
		}
		msgVO.setMsgId(String.valueOf(flag));
		msgVO.setMsgContents(msg);
		
		gsonString = gson.toJson(msgVO);
		LOG.debug("gsonString="+gsonString);
		
		res.setContentType("text/html;charset=utf-8");
		PrintWriter out = res.getWriter();
		out.print(gsonString);
		
	}

}








